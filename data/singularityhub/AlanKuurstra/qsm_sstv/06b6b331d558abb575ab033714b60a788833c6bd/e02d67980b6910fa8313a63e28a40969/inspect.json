{
    "data": {
        "attributes": {
            "deffile": "Bootstrap: docker\nFrom: ubuntu:xenial\n\n# anaconda2-5.0.1(python 2.7.12)\n# nipype 0.13.1\n# fsl 5.0.9\n\n#########\n%setup\n#########\n#copy SS_TV matlab scripts\nmkdir -p ${SINGULARITY_ROOTFS}/code/matlab_scripts\n\ncp matlab_scripts/SS_TV_script ${SINGULARITY_ROOTFS}/code/matlab_scripts/SS_TV_script\ncp matlab_scripts/run_SS_TV_script.sh ${SINGULARITY_ROOTFS}/code/matlab_scripts/run_SS_TV_script.sh\n\n#copy nipype qsm pipeline\ncp *.py ${SINGULARITY_ROOTFS}/code/\n\n#########\n%post\n#########\nexport DEBIAN_FRONTEND=noninteractive\n\napt-get update\napt-get install -y --no-install-recommends \\\napt-utils \\\nsudo \\\nwget \\\ncurl \\\ngit \\\ndos2unix \\\ntree \\\nzip \\\nunzip \\\nmake \\\ncmake \\\nbzip2 \\\nbuild-essential \\\nlibtool \\\nautotools-dev \\\nautomake \\\nautoconf \\\ntzdata \\\ngit \\\nunzip \\\npython-fftw \\\nca-certificates \\\npython3-setuptools \\\npython3-pip\n\n#=============================================\n#python3 packages to run r2star script\n#=============================================\npip3 install pip==9.0.1\npip3 install numpy==1.13.3 scipy==1.0.0 nibabel==2.2.1\n#=============================================\n\n#=============================================\n#install fsl\n#=============================================\necho \"America/New_York\" | sudo tee /etc/timezone && sudo dpkg-reconfigure --frontend noninteractive tzdata\nwget -O- http://neuro.debian.net/lists/trusty.de-md.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list\n#sudo apt-key adv --recv-keys --keyserver pgp.mit.edu 2649A5A9\napt-key adv --recv-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9\nsudo apt-get update\nsudo apt-get install -y fsl=5.0.9-4~nd14.04+1\n#=============================================\n\n#=============================================\n#install anaconda python and nipype\n#=============================================\nDEST=/opt\nmkdir -p $DEST\n\nANACONDA2_DIR=$DEST/anaconda2\nif [ -d $ANACONDA2_DIR ]; then\n\trm -rf $ANACONDA2_DIR\nfi\n\n#Anaconda2-5.0.1-Linux-x86_64.sh was not compatible with nipype\nINST_FILE=Anaconda2-4.2.0-Linux-x86_64.sh \n\nwget -P $ANACONDA2_DIR --tries=10 https://repo.continuum.io/archive/$INST_FILE\nbash $ANACONDA2_DIR/$INST_FILE -b -f -p $ANACONDA2_DIR\nrm $ANACONDA2_DIR/$INST_FILE\n\nexport PATH=${ANACONDA2_DIR}/bin/:$PATH\nconda install -y -c conda-forge nipype=0.13.1\n#=============================================\n\npip install --upgrade pip\n\n#=============================================\n#install pygrabbit and pybids\n#=============================================\npip install grabbit==0.0.8\n#install pybids\ngit clone https://github.com/INCF/pybids.git /code/pybids\ncd /code/pybids\ngit checkout 37f0bf3f7ce3a1bf6fb31376b8249c324f572048\nln -s /code/pybids/bids /code/bids\n#=============================================\n\n#=============================================\n#install pyQSM for phase unwrapping and frequency estimation\n#=============================================\n#install pyQSM for phase unwrapping and frequency estimation\ngit clone https://github.com/AlanKuurstra/pyQSM.git /code/pyQSM\ncd /code/pyQSM\ngit checkout dfabc133085a4c06f9e4e5643686b7d711da576f\ncd /code/pyQSM/unwrap3dInterface\npython setup.py build\npython setup.py install --install-platlib ..\ncd /code/pyQSM/calculateReliabilityInterface\npython setup.py build\npython setup.py install --install-platlib ..\n#=============================================\n\n#=============================================\n#install mcr for matlab dipole inversion code\n#=============================================\nexport MATLAB_VERSION=R2016b\nmkdir /opt/mcr_install && \\\n    mkdir /opt/mcr && \\\n    wget -P /opt/mcr_install http://www.mathworks.com/supportfiles/downloads/${MATLAB_VERSION}/deployment_files/${MATLAB_VERSION}/installers/glnxa64/MCR_${MATLAB_VERSION}_glnxa64_installer.zip && \\\n    unzip -q /opt/mcr_install/MCR_${MATLAB_VERSION}_glnxa64_installer.zip -d /opt/mcr_install && \\\n    /opt/mcr_install/install -destinationFolder /opt/mcr -agreeToLicense yes -mode silent && \\\n    rm -rf /opt/mcr_install /tmp/*\n#=============================================\n\n#making this dir during setup now\n#mkdir -p /code/matlab_scripts \n\n#make entry point executable\nchmod -R +x /code\n\n#########\n%files\n#########\n#initially copied the .py files in this section.\n#however, chmod can't run in environment section, it has to run in the post section\n#since file copy must happen before post, these copies are now done in setup\n#./matlab_scripts/SS_TV_script /code/matlab_scripts/SS_TV_script\n#./matlab_scripts/run_SS_TV_script.sh /code/matlab_scripts/run_SS_TV_script.sh\n#./*.py /code/\n\n#########\n%environment\n#########\n#tries to chmod when running container, but permission denied\n#chmod must be done in post section\n#chmod -R +x /code \n\n#skip all interactive steps\n#export DEBIAN_FRONTEND=noninteractive\n\nexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH\nexport PATH=/opt/anaconda2/bin/:$PATH\n\n#fsl\nexport FSLDIR=/usr/share/fsl/5.0\nexport POSSUMDIR=$FSLDIR\nexport PATH=/usr/lib/fsl/5.0:$PATH\nexport FSLOUTPUTTYPE=NIFTI_GZ\nexport FSLMULTIFILEQUIT=TRUE\nexport FSLTCLSH=/usr/bin/tclsh\nexport FSLWISH=/usr/bin/wish\nexport FSLBROWSER=/etc/alternatives/x-www-browser\nexport LD_LIBRARY_PATH=/usr/lib/fsl/5.0\n\n#mcr\nexport MCR_VERSION=v91\nexport LD_LIBRARY_PATH=/opt/mcr/${MCR_VERSION}/runtime/glnxa64:/opt/mcr/${MCR_VERSION}/bin/glnxa64:/opt/mcr/${MCR_VERSION}/sys/os/glnxa64:/opt/mcr/${MCR_VERSION}/sys/opengl/lib/glnxa64:${LD_LIBRARY_PATH}\nexport=MCR_INHIBIT_CTF_LOCK 1\n\n\n#########\n%runscript\n#########\n/code/run.py \"$@\"\n\n",
            "help": null,
            "labels": {
                "org.label-schema.usage.singularity.deffile.bootstrap": "docker",
                "org.label-schema.usage.singularity.deffile": "Singularity.v0.1.0",
                "org.label-schema.schema-version": "1.0",
                "org.label-schema.usage.singularity.deffile.from": "ubuntu:xenial",
                "org.label-schema.build-date": "Wed,_25_Apr_2018_17:23:43_+0000",
                "org.label-schema.usage.singularity.version": "2.4.1-feature-squashbuild-secbuild-2.4.1.g220f8e0",
                "org.label-schema.build-size": "5805MB"
            },
            "environment": "# Custom environment shell code should follow\n\n#########\n#tries to chmod when running container, but permission denied\n#chmod must be done in post section\n#chmod -R +x /code \n\n#skip all interactive steps\n#export DEBIAN_FRONTEND=noninteractive\n\nexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH\nexport PATH=/opt/anaconda2/bin/:$PATH\n\n#fsl\nexport FSLDIR=/usr/share/fsl/5.0\nexport POSSUMDIR=$FSLDIR\nexport PATH=/usr/lib/fsl/5.0:$PATH\nexport FSLOUTPUTTYPE=NIFTI_GZ\nexport FSLMULTIFILEQUIT=TRUE\nexport FSLTCLSH=/usr/bin/tclsh\nexport FSLWISH=/usr/bin/wish\nexport FSLBROWSER=/etc/alternatives/x-www-browser\nexport LD_LIBRARY_PATH=/usr/lib/fsl/5.0\n\n#mcr\nexport MCR_VERSION=v91\nexport LD_LIBRARY_PATH=/opt/mcr/${MCR_VERSION}/runtime/glnxa64:/opt/mcr/${MCR_VERSION}/bin/glnxa64:/opt/mcr/${MCR_VERSION}/sys/os/glnxa64:/opt/mcr/${MCR_VERSION}/sys/opengl/lib/glnxa64:${LD_LIBRARY_PATH}\nexport=MCR_INHIBIT_CTF_LOCK 1\n\n\n#########\n",
            "runscript": "#!/bin/sh \n\n#########\n/code/run.py \"$@\"\n\n",
            "test": null
        },
        "type": "container"
    }
}
