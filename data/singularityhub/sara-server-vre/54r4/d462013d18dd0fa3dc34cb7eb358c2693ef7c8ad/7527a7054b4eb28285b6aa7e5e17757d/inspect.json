{
    "data": {
        "attributes": {
            "deffile": "Bootstrap: docker\nFrom: ubuntu:16.04\n\n%post\napt-get update && apt-get -y install git wget vim openjdk-8-jdk gtk3-engines-xfce python python-pycurl xterm\nmkdir -p /opt\ncd /tmp\n#wget http://www.uni-ulm.de/~nsn25/SARA/eclipse-jee-oxygen-1-linux-gtk-x86_64.tar.gz\nwget http://eclipse.c3sl.ufpr.br/technology/epp/downloads/release/oxygen/1a/eclipse-jee-oxygen-1a-linux-gtk-x86_64.tar.gz -O e.tgz\nsha256sum e.tgz # c2435e8f52fbe94859e8786d3c631c3c3b592c5f58d4c49de615fc414f6dfe3c\ntar -xzf e.tgz\nmv /tmp/eclipse /opt\nmkdir -p /lib/modules # required for udocker to run \nwget https://raw.githubusercontent.com/indigo-dc/udocker/v1.1.1/udocker.py -O /usr/bin/udocker\nchmod +x /usr/bin/udocker\nudocker --allow-root mkrepo /udocker\nudocker --allow-root --repo=/udocker pull c1t4r/sara-server-vre\nrmdir /udocker/containers\nln -s /tmp/udocker_containers /udocker/containers\n\n%environment\nexport PATH=\"/opt/eclipse:$PATH\"\n\n%runscript\nif [ \"_$1\" = _ ]; then\n\tBASE=/tmp/sara\nelse\n\tBASE=\"$1\"\n\tshift\nfi\n\nif [ \"$#\" -eq 0 ]; then\n\tGITDIR=\"$BASE/sara-server\"\n        if [ -z \"${GIT_ARCHIVE_URL}\" ]; then \n                GIT_ARCHIVE_URL=\"git@git.uni-konstanz.de:sara/SARA-server.git\"\n        fi\n\n\tif ! [ -d \"$GITDIR\" ]; then\n\t\techo \"checking out to $GITDIR...\"\n\t\tmkdir -p \"$GITDIR\"\n\t\tgit clone \"$GIT_ARCHIVE_URL\" \"$GITDIR\"\n\t\tcd \"$GITDIR\"\n\t\tgit submodule update --init\n\telse\n\t\techo \"updating $GITDIR...\"\n\t\tcd \"$GITDIR\"\n\t\tgit pull\n\t\tgit submodule update\n\tfi\nelse\n\tGITDIR=\"$1\"\n\techo \"using existing working copy in $GITDIR\"\n\t# IMO we shouldn't pull it here\n\t# the user \"owns\" that directory, so we better not mess with it\n\t/bin/echo -e '\\e[1;33mplease \"git pull\" it manually if necessary!\\e[0m'\n\tcd \"$GITDIR\"\nfi\n\n/bin/echo -e '\\e[32m' # sometimes, dash sucks!\necho \"====================================================\"\n/bin/echo -en '\\e[1m'\necho \"IF THIS IS YOUR INITAL RUN, PLEASE DO THE FOLLOWING:\"\n/bin/echo -e '\\e[0;32m'\necho \" 1) Import the SARA code as 'Existing Maven Project'\"\necho \" 2) Open 'bwfdm.sara.Application' and right-click 'Run' -> 'Java Application'\"\necho \" 3) Wait for Spring to start, connect to 'http://localhost:8080'\"\necho \" 4) Congrats ... you're done!\"\n/bin/echo -e '\\e[0m'\n\necho \"calling eclipse\"\n/opt/eclipse/eclipse -configuration \"$BASE/eclipseconfig\" -data \"$BASE\"\necho \"Exiting Container...\"\nsync\n",
            "help": null,
            "labels": {
                "org.label-schema.usage.singularity.deffile.bootstrap": "docker",
                "org.label-schema.usage.singularity.deffile": "Singularity",
                "org.label-schema.schema-version": "1.0",
                "org.label-schema.usage.singularity.deffile.from": "ubuntu:16.04",
                "org.label-schema.build-date": "Wed,_28_Mar_2018_11:05:51_+0000",
                "org.label-schema.usage.singularity.version": "2.4.1-feature-squashbuild-secbuild-2.4.1.g220f8e0",
                "org.label-schema.build-size": "1569MB"
            },
            "environment": "# Custom environment shell code should follow\n\nexport PATH=\"/opt/eclipse:$PATH\"\n\n",
            "runscript": "#!/bin/sh \n\nif [ \"_$1\" = _ ]; then\n\tBASE=/tmp/sara\nelse\n\tBASE=\"$1\"\n\tshift\nfi\n\nif [ \"$#\" -eq 0 ]; then\n\tGITDIR=\"$BASE/sara-server\"\n        if [ -z \"${GIT_ARCHIVE_URL}\" ]; then \n                GIT_ARCHIVE_URL=\"git@git.uni-konstanz.de:sara/SARA-server.git\"\n        fi\n\n\tif ! [ -d \"$GITDIR\" ]; then\n\t\techo \"checking out to $GITDIR...\"\n\t\tmkdir -p \"$GITDIR\"\n\t\tgit clone \"$GIT_ARCHIVE_URL\" \"$GITDIR\"\n\t\tcd \"$GITDIR\"\n\t\tgit submodule update --init\n\telse\n\t\techo \"updating $GITDIR...\"\n\t\tcd \"$GITDIR\"\n\t\tgit pull\n\t\tgit submodule update\n\tfi\nelse\n\tGITDIR=\"$1\"\n\techo \"using existing working copy in $GITDIR\"\n\t# IMO we shouldn't pull it here\n\t# the user \"owns\" that directory, so we better not mess with it\n\t/bin/echo -e '\\e[1;33mplease \"git pull\" it manually if necessary!\\e[0m'\n\tcd \"$GITDIR\"\nfi\n\n/bin/echo -e '\\e[32m' # sometimes, dash sucks!\necho \"====================================================\"\n/bin/echo -en '\\e[1m'\necho \"IF THIS IS YOUR INITAL RUN, PLEASE DO THE FOLLOWING:\"\n/bin/echo -e '\\e[0;32m'\necho \" 1) Import the SARA code as 'Existing Maven Project'\"\necho \" 2) Open 'bwfdm.sara.Application' and right-click 'Run' -> 'Java Application'\"\necho \" 3) Wait for Spring to start, connect to 'http://localhost:8080'\"\necho \" 4) Congrats ... you're done!\"\n/bin/echo -e '\\e[0m'\n\necho \"calling eclipse\"\n/opt/eclipse/eclipse -configuration \"$BASE/eclipseconfig\" -data \"$BASE\"\necho \"Exiting Container...\"\nsync\n",
            "test": null
        },
        "type": "container"
    }
}
