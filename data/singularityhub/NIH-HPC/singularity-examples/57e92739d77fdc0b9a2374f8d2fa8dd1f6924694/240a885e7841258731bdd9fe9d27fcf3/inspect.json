{
    "data": {
        "attributes": {
            "deffile": "Bootstrap: docker\nFrom: nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\n\n%post\necho \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\napt-get update \napt-get install -y software-properties-common python-software-properties\nadd-apt-repository main\nadd-apt-repository universe\nadd-apt-repository multiverse\napt-get install -y --no-install-recommends \\\n        autoconf \\\n        automake \\\n        ca-certificates \\\n        curl \\\n        g++ \\\n        git \\\n        libtool \\\n        make \\\n        python-dev \\\n        python-setuptools \\\n        unzip doxygen\nmkdir /protobuf\nexport PROTOBUF_ROOT=/protobuf\ncd /protobuf\n\ngit clone -b '3.2.x' https://github.com/google/protobuf.git .\n    ./autogen.sh\n    ./configure --prefix=/usr/local/protobuf\n    make \"-j$(nproc)\"\n    make install\n    cd python\n    python setup.py install --cpp_implementation\napt-get update\napt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        g++ \\\n        git \\\n        libatlas-base-dev \\\n        libboost-filesystem-dev \\\n        libboost-python-dev \\\n        libboost-system-dev \\\n        libboost-thread-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libnccl-dev=1.2.3-1+cuda8.0 \\\n        libopencv-dev \\\n        libsnappy-dev \\\n        python-all-dev \\\n        python-h5py \\\n        python-matplotlib \\\n        python-opencv \\\n        python-pil \\\n        python-pydot \\\n        python-scipy \\\n        python-skimage \\\n        python-sklearn\n\n# Build pip\ncurl -O https://bootstrap.pypa.io/get-pip.py\n    python get-pip.py\n    pip install --upgrade --no-cache-dir pip\napt-get -y install libprotobuf-dev protobuf-compiler\n\n# Build caffe\nmkdir /caffe\nexport CAFFE_ROOT=/caffe\ngit clone https://github.com/nvidia/caffe.git /caffe -b 'caffe-0.15'\n    cd /caffe\n    pip install ipython==5.4.1\n    pip install -r python/requirements.txt\n#    cat python/requirements.txt | xargs -n1 pip install\n    mkdir build\n    cd build\n    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/caffe -DUSE_NCCL=ON \\\n-DUSE_CUDNN=ON -DCUDA_ARCH_NAME=Manual -DCUDA_ARCH_BIN=\"35 52 60 61\" \\\n-DCUDA_ARCH_PTX=\"61\" ..\n    make -j\"$(nproc)\"\n    make install\n    make pycaffe\n    cd /\n\n\n# Install the packages to get pip installed or else we run into numpy problems\napt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        python\n\n# Build pip, need to do this before DIGITS packages or else we get numpy problems\ncurl -O https://bootstrap.pypa.io/get-pip.py\n    python get-pip.py\n    pip install --upgrade --no-cache-dir pip\n\napt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        git \\\n        graphviz \\\n        gunicorn \\\n        libatlas3-base \\\n        libboost-filesystem1.58.0 \\\n        bboost-python1.58.0 \\\n        libboost-system1.58.0 \\\n        libboost-thread1.58.0 \\\n        libfreetype6-dev \\\n        libgoogle-glog0v5 \\\n        libhdf5-serial-dev \\\n        libleveldb1v5 \\\n        libnccl1=1.2.3-1+cuda8.0 \\\n        libopencv-core2.4v5 \\\n        libopencv-highgui2.4v5 \\\n        libopencv-imgproc2.4v5 \\\n        libpng12-dev \\\n        libzmq5 \\\n        nginx \\\n        pkg-config \\\n        python-dev \\\n        python-flask \\\n        python-flaskext.socketio \\\n        python-flaskext.wtf \\\n        python-gevent \\\n        python-lmdb \\\n        python-opencv \\\n        python-pil \\\n        python-pydot \\\n        python-requests \\\n        python-six \\\n        python-skimage \\\n        python-tk \\\n        python-wtforms \\\n        rsync \\\n        software-properties-common\n        rm -rf /var/lib/apt/lists/*\n\npip install https://github.com/NVIDIA/DIGITS/archive/v6.0.1.tar.gz\n\npip install --no-cache-dir \\\n        setuptools\\>=18.5 \\\n        tensorflow-gpu==1.2.1 \\\n        protobuf==3.2.0\n\nmkdir /gpfs /gs2 /gs3 /gs4 /gs5 /gs6 /gs7 /gs8 /gs9 /gs10 /gs11 /gs12 /spin1 /data /scratch /fdb /lscratch\napt-get clean\n\n%environment\nexport DIGITS_JOBS_DIR=/mnt\nexport DIGITS_LOGFILE_FILENAME=/mnt/digits.log\nexport PYTHONPATH=/usr/local/python\nexport DIGITS_VERSION=6.0\nexport PATH=/usr/local/caffe/bin/:$PATH\nexport PYTHONPATH=/usr/local/caffe/python/:$PYTHONPATH\nexport LD_LIBRARY_PATH=/usr/local/protobuf/lib:$LD_LIBRARY_PATH\n",
            "help": null,
            "labels": {
                "org.label-schema.usage.singularity.version": "2.4.1-feature-squashbuild-secbuild-2.4.1.gaa08d4d",
                "org.label-schema.usage.singularity.deffile.bootstrap": "docker",
                "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>",
                "org.label-schema.usage.singularity.deffile": "Singularity.digits",
                "org.label-schema.schema-version": "1.0",
                "com.nvidia.volumes.needed": "nvidia_driver",
                "org.label-schema.usage.singularity.deffile.from": "nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04",
                "com.nvidia.build.id": "52886705",
                "org.label-schema.build-date": "Tue,_20_Feb_2018_18:45:30_+0000",
                "com.nvidia.cuda.version": "8.0.61",
                "com.nvidia.build.ref": "8ea0e2d2ddcda3ad399ea6a17c1499d839b889ae",
                "com.nvidia.cudnn.version": "5.1.10",
                "org.label-schema.build-size": "4492MB"
            },
            "environment": "# Custom environment shell code should follow\n\nexport DIGITS_JOBS_DIR=/mnt\nexport DIGITS_LOGFILE_FILENAME=/mnt/digits.log\nexport PYTHONPATH=/usr/local/python\nexport DIGITS_VERSION=6.0\nexport PATH=/usr/local/caffe/bin/:$PATH\nexport PYTHONPATH=/usr/local/caffe/python/:$PYTHONPATH\nexport LD_LIBRARY_PATH=/usr/local/protobuf/lib:$LD_LIBRARY_PATH\n",
            "runscript": "#!/bin/sh\n\nexec \"/bin/bash\" \"$@\"\n",
            "test": null
        },
        "type": "container"
    }
}
